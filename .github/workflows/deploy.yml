name: Build and Deploy Wedding Photo Site to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Pull image urls from gh secrets
        run: |
          mkdir -p build/data
          curl -L "$CEREMONY" -o build/data/ceremony.json
          curl -L "$DETAILS" -o build/data/details.json
          curl -L "$FILM_SCANS" -o build/data/film_scans.json
          curl -L "$GETTING_READY" -o build/data/getting_ready.json
          curl -L "$GROUP_FAMILY" -o build/data/group_family.json
          curl -L "$RECEPTION" -o build/data/reception.json
          curl -L "$THE_COUPLE" -o build/data/the_couple.json
        env:
          CEREMONY: ${{ secrets.CEREMONY }}
          DETAILS: ${{ secrets.DETAILS }}
          FILM_SCANS: ${{ secrets.FILM_SCANS }}
          GETTING_READY: ${{ secrets.GETTING_READY }}
          GROUP_FAMILY: ${{ secrets.GROUP_FAMILY }}
          RECEPTION: ${{ secrets.RECEPTION }}
          THE_COUPLE: ${{ secrets.THE_COUPLE }}

      - name: Copy site files
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p build/js
          mkdir -p build/css
          cp index.html build/
          cp -r js/* build/js/
          cp -r css/* build/css/

      - name: Show content of index.html before sed
        run: |
          echo "Content of build/index.html before sed:"
          cat build/index.html
          echo "--- End index.html content ---"

      - name: Replace IMAGE_BASE_URL placeholder
        env:
          IMAGE_BASE_URL: ${{ vars.IMAGE_BASE_URL }}
        run: |
          sed -i "s|__IMAGE_BASE_URL__|\"$IMAGE_BASE_URL\"|g" build/index.html
          echo "Sed command executed. Showing content after sed:"
          cat build/index.html # Show content after sed to verify replacement
          echo "--- End index.html content after sed ---"

      - name: Logging before deploy
        run: |
          cat build/index.html # Show content after sed to verify replacement

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path:
            build/

  # Deployment job
  deploy:
    if: env.DRY_RUN != 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
